# --- Mamba/Conda environment activation (direnv helper) ---
source "/home/earnest/.config/direnv/lib/use_mamba.sh"
use_mamba "Survival-Truck"

# --- Poetry: use current interpreter (no Poetry venv) ---
export POETRY_VIRTUALENVS_CREATE=false
export POETRY_NO_INTERACTION=1

# --- Pip policy (your original preference) ---
export PIP_REQUIRE_VIRTUALENV=

# --- Trigger reloads when dependency descriptors change ---
watch_file pyproject.toml
watch_file poetry.lock

# --- Idempotent dependency sync (stamp) ---
stamp_dir=".direnv"
mkdir -p "${stamp_dir}"

hash_input=""
[[ -f pyproject.toml ]] && hash_input+="$(sha256sum pyproject.toml | awk '{print $1}')"
[[ -f poetry.lock     ]] && hash_input+="$(sha256sum poetry.lock     | awk '{print $1}')"

current_hash="$(printf '%s' "${hash_input}" | sha256sum | awk '{print $1}')"
stamp_file="${stamp_dir}/poetry.sync.stamp"
previous_hash="$(cat "${stamp_file}" 2>/dev/null || true)"

if [[ "${current_hash}" != "${previous_hash}" ]]; then
  if command -v poetry >/dev/null 2>&1; then
    echo "[direnv] Detected pyproject/lock change -> syncing dependencies"
    # Prefer 'poetry sync' (1.8+); fall back to 'poetry install --sync' for older Poetry
    if poetry --version | awk '{print $3}' | grep -qE '^(1\.[89]|2\.)'; then
      poetry sync
    else
      poetry install --sync
    fi
    printf '%s' "${current_hash}" > "${stamp_file}"
  else
    echo "[direnv] Poetry not found in PATH. Install it or ensure the env provides it."
  fi
fi

# Re-evaluate when your global secrets change
watch_file ~/.env_secrets

# Only do this for HTTPS remotes to GitHub
if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
  url="$(git config --get remote.origin.url || true)"
  if [[ "$url" == https://github.com/* ]]; then
    git config --local credential.helper \
'!f(){ echo username=Earnest-Williams; echo password=$GITHUB_TOKEN; }; f'
  fi
fi


# --- Optional project-local environment variables ---
# export ST_LOG_LEVEL=INFO
# export ST_DATA_DIR="$PWD/data"


